//
//  Chip8Memory.m
//  Chip8
//
//  Created by Jedd Haberstro on 19/07/2010.
//

#import "Chip8Memory.h"
#include <assert.h>


@implementation Chip8Memory

- (id)init {
    if ((self = [super init]) != nil) {
		// load in font data in order: 0, 1, 2, ... 0xf
		uint8_t fontData[16*5] = {
			0xf0, 0x90, 0x90, 0x90, 0xf0, // 0
            0x20, 0x60, 0x20, 0x20, 0x70, // 1
            0xf0, 0x10, 0xf0, 0x80, 0xf0, // 2
            0xf0, 0x10, 0xf0, 0x10, 0xf0, // 3
            0x90, 0x90, 0xf0, 0x10, 0x10, // 4
            0xf0, 0x80, 0xf0, 0x10, 0xf0, // 5
            0xf0, 0x80, 0xf0, 0x90, 0xf0, // 6
            0xf0, 0x10, 0x20, 0x40, 0x40, // 7
            0xf0, 0x90, 0xf0, 0x90, 0xf0, // 8
            0xf0, 0x90, 0xf0, 0x10, 0xf0, // 9
            0xf0, 0x90, 0xf0, 0x90, 0x90, // A
            0xe0, 0x90, 0xe0, 0x90, 0xe0, // B
            0xf0, 0x80, 0x80, 0x80, 0xf0, // C
            0xe0, 0x90, 0x90, 0x90, 0xe0, // D
            0xf0, 0x80, 0xf0, 0x80, 0xf0, // E
            0xf0, 0x80, 0xf0, 0x80, 0x80  // F
		};	
		
		memcpy(memory, fontData, 16*5);
    }
    
    return self;
}

- (void)writeMemory:(uint8_t)data atIndex:(int)index {
    assert(index <= 0xfff);
    memory[index] = data;
}

- (uint8_t)readMemoryAtIndex:(int)index {
    assert(index <= 0xfff);
    return memory[index];
}

- (uint8_t*)memoryData {
    return &memory[0];
}

@end
